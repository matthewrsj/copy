// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conveyance.proto

package asrs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Location should be able to describe locations pertinent to material flow and urgent events. e.g.
// - a location in the charge/discharge rack
// - a placeholder for a WMS-picked location in storage (Option A - C in step 4 of Formation Process Workflow)
// - an explicit Conductor-selected storage location (Option D in step 4 of Formation Process Workflow)
type Location struct {
	// Types that are valid to be assigned to LocationByType:
	//	*Location_CmFormat
	//	*Location_PortFormat
	LocationByType       isLocation_LocationByType `protobuf_oneof:"LocationByType"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b0db1c7beb8448c, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

type isLocation_LocationByType interface {
	isLocation_LocationByType()
}

type Location_CmFormat struct {
	CmFormat *CMLocation `protobuf:"bytes,1,opt,name=cm_format,json=cmFormat,proto3,oneof"`
}

type Location_PortFormat struct {
	PortFormat string `protobuf:"bytes,2,opt,name=port_format,json=portFormat,proto3,oneof"`
}

func (*Location_CmFormat) isLocation_LocationByType() {}

func (*Location_PortFormat) isLocation_LocationByType() {}

func (m *Location) GetLocationByType() isLocation_LocationByType {
	if m != nil {
		return m.LocationByType
	}
	return nil
}

func (m *Location) GetCmFormat() *CMLocation {
	if x, ok := m.GetLocationByType().(*Location_CmFormat); ok {
		return x.CmFormat
	}
	return nil
}

func (m *Location) GetPortFormat() string {
	if x, ok := m.GetLocationByType().(*Location_PortFormat); ok {
		return x.PortFormat
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Location) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Location_CmFormat)(nil),
		(*Location_PortFormat)(nil),
	}
}

// Tray represents the unit moved around while moving material in MaterialFlowOperations or delivering paylaod to
// terminals of conveyance. The tray_id is a set of identifiers of payloads which are being or have the potential
// of being ferried around and processed together.
type Tray struct {
	TrayId               []string `protobuf:"bytes,1,rep,name=tray_id,json=trayId,proto3" json:"tray_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tray) Reset()         { *m = Tray{} }
func (m *Tray) String() string { return proto.CompactTextString(m) }
func (*Tray) ProtoMessage()    {}
func (*Tray) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b0db1c7beb8448c, []int{1}
}

func (m *Tray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tray.Unmarshal(m, b)
}
func (m *Tray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tray.Marshal(b, m, deterministic)
}
func (m *Tray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tray.Merge(m, src)
}
func (m *Tray) XXX_Size() int {
	return xxx_messageInfo_Tray.Size(m)
}
func (m *Tray) XXX_DiscardUnknown() {
	xxx_messageInfo_Tray.DiscardUnknown(m)
}

var xxx_messageInfo_Tray proto.InternalMessageInfo

func (m *Tray) GetTrayId() []string {
	if m != nil {
		return m.TrayId
	}
	return nil
}

// CMLocation - location adhering to the Cell Manufacturing naming convention (Road Runner Equipment List.xslx)
type CMLocation struct {
	// Equipment ID is currently a composite of the fields beneath in the form of:
	// <manufacturing_system>-<workcenter><equipment><workstation>-<sub-identifier>
	// e.g. CM2-60040-08 for Aisle 4, Tower 8 in RR. Workcenter is 60 (Formation).
	EquipmentId string `protobuf:"bytes,1,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	// Manufacturing system; e.g. CM0 (Tera), CM1(Swift) and CM2(RR)
	ManufacturingSystem string `protobuf:"bytes,2,opt,name=manufacturing_system,json=manufacturingSystem,proto3" json:"manufacturing_system,omitempty"`
	// Workcenter; Formation is 60.
	// Specifically:
	//  61: Landing (ingress)
	//  62: Crane
	//  63: Aisle  -> equipment provides aisle, tower is workstation. subidentifier is level?
	//  64: High Temp Aging
	//  65: Room Temp Aging
	//  66: OCV/ACIR
	//  67: Packout
	Workcenter           string   `protobuf:"bytes,3,opt,name=workcenter,proto3" json:"workcenter,omitempty"`
	Equipment            string   `protobuf:"bytes,4,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Workstation          string   `protobuf:"bytes,5,opt,name=workstation,proto3" json:"workstation,omitempty"`
	SubIdentifier        string   `protobuf:"bytes,6,opt,name=sub_identifier,json=subIdentifier,proto3" json:"sub_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMLocation) Reset()         { *m = CMLocation{} }
func (m *CMLocation) String() string { return proto.CompactTextString(m) }
func (*CMLocation) ProtoMessage()    {}
func (*CMLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b0db1c7beb8448c, []int{2}
}

func (m *CMLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMLocation.Unmarshal(m, b)
}
func (m *CMLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMLocation.Marshal(b, m, deterministic)
}
func (m *CMLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMLocation.Merge(m, src)
}
func (m *CMLocation) XXX_Size() int {
	return xxx_messageInfo_CMLocation.Size(m)
}
func (m *CMLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_CMLocation.DiscardUnknown(m)
}

var xxx_messageInfo_CMLocation proto.InternalMessageInfo

func (m *CMLocation) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *CMLocation) GetManufacturingSystem() string {
	if m != nil {
		return m.ManufacturingSystem
	}
	return ""
}

func (m *CMLocation) GetWorkcenter() string {
	if m != nil {
		return m.Workcenter
	}
	return ""
}

func (m *CMLocation) GetEquipment() string {
	if m != nil {
		return m.Equipment
	}
	return ""
}

func (m *CMLocation) GetWorkstation() string {
	if m != nil {
		return m.Workstation
	}
	return ""
}

func (m *CMLocation) GetSubIdentifier() string {
	if m != nil {
		return m.SubIdentifier
	}
	return ""
}

func init() {
	proto.RegisterType((*Location)(nil), "conveyance.Location")
	proto.RegisterType((*Tray)(nil), "conveyance.Tray")
	proto.RegisterType((*CMLocation)(nil), "conveyance.CMLocation")
}

func init() { proto.RegisterFile("conveyance.proto", fileDescriptor_6b0db1c7beb8448c) }

var fileDescriptor_6b0db1c7beb8448c = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x17, 0x37, 0xeb, 0xfa, 0x55, 0xc7, 0x88, 0xa2, 0x39, 0x88, 0x76, 0x03, 0xa1, 0xa7,
	0x81, 0x8a, 0x7f, 0x60, 0x82, 0x6c, 0xa0, 0x97, 0xba, 0x93, 0x97, 0x92, 0xa5, 0x99, 0x04, 0x49,
	0x52, 0x93, 0x74, 0x92, 0x9f, 0xec, 0xbf, 0x90, 0xa5, 0x6c, 0xad, 0xc7, 0x3c, 0xef, 0xf3, 0xf2,
	0xbd, 0x10, 0x18, 0x33, 0xad, 0xb6, 0xdc, 0x53, 0xc5, 0xf8, 0xac, 0x32, 0xda, 0x69, 0x0c, 0x2d,
	0x99, 0x6e, 0x61, 0xf8, 0xaa, 0x19, 0x75, 0x42, 0x2b, 0xfc, 0x04, 0x31, 0x93, 0xc5, 0x46, 0x1b,
	0x49, 0x1d, 0x41, 0x29, 0xca, 0x92, 0x87, 0xcb, 0x59, 0xa7, 0xfd, 0xfc, 0xb6, 0x57, 0x17, 0xbd,
	0x7c, 0xc8, 0xe4, 0x4b, 0x30, 0xf1, 0x04, 0x92, 0x4a, 0x1b, 0xb7, 0x2f, 0x1e, 0xa5, 0x28, 0x8b,
	0x17, 0xbd, 0x1c, 0x76, 0xb0, 0x51, 0xe6, 0x63, 0x18, 0xed, 0xab, 0x73, 0xbf, 0xf2, 0x15, 0x9f,
	0xde, 0xc2, 0x60, 0x65, 0xa8, 0xc7, 0x57, 0x70, 0xe2, 0x0c, 0xf5, 0x85, 0x28, 0x09, 0x4a, 0xfb,
	0x59, 0x9c, 0x47, 0xbb, 0xe7, 0xb2, 0x9c, 0xfe, 0x22, 0x80, 0xf6, 0x20, 0x9e, 0xc0, 0x29, 0xff,
	0xae, 0x45, 0x25, 0xb9, 0x72, 0x8d, 0x8c, 0xb2, 0x38, 0x4f, 0x0e, 0x6c, 0x59, 0xe2, 0x7b, 0xb8,
	0x90, 0x54, 0xd5, 0x1b, 0xca, 0x5c, 0x6d, 0x84, 0xfa, 0x2c, 0xac, 0xb7, 0x8e, 0xcb, 0x66, 0x50,
	0x7e, 0xfe, 0x2f, 0x7b, 0x0f, 0x11, 0xbe, 0x01, 0xf8, 0xd1, 0xe6, 0x8b, 0x71, 0xe5, 0xb8, 0x21,
	0xfd, 0x20, 0x76, 0x08, 0xbe, 0x86, 0xf8, 0x70, 0x81, 0x0c, 0x42, 0xdc, 0x02, 0x9c, 0x42, 0xb2,
	0x73, 0xad, 0x0b, 0x13, 0xc9, 0x71, 0x33, 0xa9, 0x83, 0xf0, 0x1d, 0x8c, 0x6c, 0xbd, 0x2e, 0x44,
	0xc9, 0x95, 0x13, 0x1b, 0xc1, 0x0d, 0x89, 0x82, 0x74, 0x66, 0xeb, 0xf5, 0xf2, 0x00, 0xe7, 0xd1,
	0xc7, 0x80, 0x5a, 0x63, 0xd7, 0x51, 0xf8, 0x9f, 0xc7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9,
	0x15, 0x74, 0xe9, 0xb3, 0x01, 0x00, 0x00,
}
