// Code generated by protoc-gen-go. DO NOT EDIT.
// source: result.proto

package asrs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// StateType: which type of state are we exchanging, desired or current.
type StateType int32

const (
	StateType_UnusedStateType StateType = 0
	// Desired indicates a request to get to a desired state
	StateType_Desired StateType = 1
	// Current is an assertion of the current state at time of issue.
	StateType_Current StateType = 2
)

var StateType_name = map[int32]string{
	0: "UnusedStateType",
	1: "Desired",
	2: "Current",
}

var StateType_value = map[string]int32{
	"UnusedStateType": 0,
	"Desired":         1,
	"Current":         2,
}

func (x StateType) String() string {
	return proto.EnumName(StateType_name, int32(x))
}

func (StateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{0}
}

// Alarm status determined by equipment.
type AlarmStatus int32

const (
	AlarmStatus_Clear AlarmStatus = 0
	AlarmStatus_Set   AlarmStatus = 1
)

var AlarmStatus_name = map[int32]string{
	0: "Clear",
	1: "Set",
}

var AlarmStatus_value = map[string]int32{
	"Clear": 0,
	"Set":   1,
}

func (x AlarmStatus) String() string {
	return proto.EnumName(AlarmStatus_name, int32(x))
}

func (AlarmStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{1}
}

// Alarm level determined by equipment. AlarmLevel may be interpreted by Conductor.
type AlarmLevel int32

const (
	AlarmLevel_Warning AlarmLevel = 0
	AlarmLevel_Serious AlarmLevel = 1
)

var AlarmLevel_name = map[int32]string{
	0: "Warning",
	1: "Serious",
}

var AlarmLevel_value = map[string]int32{
	"Warning": 0,
	"Serious": 1,
}

func (x AlarmLevel) String() string {
	return proto.EnumName(AlarmLevel_name, int32(x))
}

func (AlarmLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{2}
}

type Status_Value int32

const (
	Status_UnusedStatusValue Status_Value = 0
	Status_Complete          Status_Value = 1
	Status_Fault             Status_Value = 2
	Status_Rejected          Status_Value = 3
)

var Status_Value_name = map[int32]string{
	0: "UnusedStatusValue",
	1: "Complete",
	2: "Fault",
	3: "Rejected",
}

var Status_Value_value = map[string]int32{
	"UnusedStatusValue": 0,
	"Complete":          1,
	"Fault":             2,
	"Rejected":          3,
}

func (x Status_Value) String() string {
	return proto.EnumName(Status_Value_name, int32(x))
}

func (Status_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{0, 0}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Section includes messages and enumerations used across APIs covering an expression of result state. Examples
// of common messages in this category include status, alarm status and level etc.
//
type Status struct {
	Status Status_Value `protobuf:"varint,1,opt,name=status,proto3,enum=result.Status_Value" json:"status,omitempty"`
	// Description in case Status is anything other than completed, and is used to communicate Fault/Reject description
	// to operators as Fault bubbles up (UI, logs, metrics etc). Rejected status is typically used in conjunction with
	// an acknowledgment of a desired status which cannot be honoured.
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatus() Status_Value {
	if m != nil {
		return m.Status
	}
	return Status_UnusedStatusValue
}

func (m *Status) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// ProcessResult carries opaque results for a given process.
type ProcessResults struct {
	// A description of the results which can be used by third parties for descriptive (logging/ui) purposes only.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Payload include specialised serialised results. Context must be enough to allow interested parties to deserialise
	// appropriately.
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessResults) Reset()         { *m = ProcessResults{} }
func (m *ProcessResults) String() string { return proto.CompactTextString(m) }
func (*ProcessResults) ProtoMessage()    {}
func (*ProcessResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{1}
}

func (m *ProcessResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResults.Unmarshal(m, b)
}
func (m *ProcessResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResults.Marshal(b, m, deterministic)
}
func (m *ProcessResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResults.Merge(m, src)
}
func (m *ProcessResults) XXX_Size() int {
	return xxx_messageInfo_ProcessResults.Size(m)
}
func (m *ProcessResults) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResults.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResults proto.InternalMessageInfo

func (m *ProcessResults) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProcessResults) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterEnum("result.StateType", StateType_name, StateType_value)
	proto.RegisterEnum("result.AlarmStatus", AlarmStatus_name, AlarmStatus_value)
	proto.RegisterEnum("result.AlarmLevel", AlarmLevel_name, AlarmLevel_value)
	proto.RegisterEnum("result.Status_Value", Status_Value_name, Status_Value_value)
	proto.RegisterType((*Status)(nil), "result.Status")
	proto.RegisterType((*ProcessResults)(nil), "result.ProcessResults")
}

func init() { proto.RegisterFile("result.proto", fileDescriptor_4feee897733d2100) }

var fileDescriptor_4feee897733d2100 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xbb, 0xed, 0xdb, 0xf4, 0xcd, 0xb4, 0xd4, 0x75, 0x55, 0xe8, 0x31, 0xe6, 0x20, 0x25,
	0x48, 0x0e, 0x7a, 0xf3, 0xa6, 0x51, 0x4f, 0x3d, 0x48, 0xe2, 0x1f, 0xf0, 0xb6, 0x26, 0x83, 0x44,
	0xb6, 0xd9, 0x30, 0xbb, 0x2b, 0xf4, 0xd3, 0xf8, 0x55, 0x25, 0x9b, 0x88, 0x42, 0x6f, 0xfb, 0x3c,
	0x33, 0xcf, 0xcc, 0x8f, 0x1d, 0x58, 0x10, 0x1a, 0xa7, 0x6c, 0xda, 0x92, 0xb6, 0x5a, 0x04, 0xbd,
	0x8a, 0xbf, 0x18, 0x04, 0x85, 0x95, 0xd6, 0x19, 0x71, 0x0e, 0x81, 0xf1, 0xaf, 0x15, 0x8b, 0xd8,
	0x7a, 0x79, 0x71, 0x9c, 0x0e, 0x89, 0xbe, 0x9e, 0x3e, 0x4b, 0xe5, 0x30, 0x1f, 0x7a, 0x44, 0x04,
	0xf3, 0x0a, 0x4d, 0x49, 0x75, 0x6b, 0x6b, 0xdd, 0xac, 0xc6, 0x11, 0x5b, 0x87, 0xf9, 0x5f, 0x2b,
	0xbe, 0x83, 0xa9, 0x8f, 0x88, 0x13, 0x38, 0x7c, 0x6a, 0x9c, 0xc1, 0xaa, 0x1f, 0xe4, 0x4d, 0x3e,
	0x12, 0x0b, 0xf8, 0x9f, 0xe9, 0x6d, 0xab, 0xd0, 0x22, 0x67, 0x22, 0x84, 0xe9, 0xbd, 0x74, 0xca,
	0xf2, 0x71, 0x57, 0xc8, 0xf1, 0x03, 0x4b, 0x8b, 0x15, 0x9f, 0xc4, 0x1b, 0x58, 0x3e, 0x90, 0x2e,
	0xd1, 0x98, 0xdc, 0xe3, 0xec, 0xad, 0x66, 0x7b, 0xab, 0xc5, 0x0a, 0x66, 0xad, 0xdc, 0x29, 0x2d,
	0x2b, 0x0f, 0xb6, 0xc8, 0x7f, 0x64, 0x72, 0x05, 0x61, 0x47, 0x81, 0x8f, 0xbb, 0x16, 0xc5, 0x11,
	0x1c, 0xfc, 0x82, 0x79, 0x8b, 0x8f, 0xc4, 0x1c, 0x66, 0xb7, 0x68, 0x6a, 0xc2, 0x8a, 0xb3, 0x4e,
	0x64, 0x8e, 0x08, 0x1b, 0xcb, 0xc7, 0xc9, 0x29, 0xcc, 0xaf, 0x95, 0xa4, 0xed, 0xf0, 0x5f, 0x21,
	0x4c, 0x33, 0x85, 0x92, 0xf8, 0x48, 0xcc, 0x60, 0x52, 0xa0, 0xe5, 0x2c, 0x39, 0x03, 0xf0, 0x2d,
	0x1b, 0xfc, 0x44, 0xd5, 0xa5, 0x5f, 0x24, 0x35, 0x75, 0xf3, 0xde, 0xcf, 0x2d, 0x90, 0x6a, 0xed,
	0x0c, 0x67, 0x37, 0xc1, 0xeb, 0x3f, 0x69, 0xc8, 0xbc, 0x05, 0xfe, 0x1a, 0x97, 0xdf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x85, 0xd5, 0x0f, 0x20, 0x9d, 0x01, 0x00, 0x00,
}
