// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connection.proto

package asrs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Conversation is embedded in all exchanges and provides the application level identity of the other end
// end should this need any disambiguation at any point. (We could be more sophisticated here and make this per
// connection metadata, but this is more obvious).
type Conversation struct {
	// The identify of the line e.g. "GF1_FM01". (We could use an enum here - upside is that it would always be
	// consistent, downside is we need to recompile when we deploy to new line).
	Line string `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	// The application level identity of the entity originating the request (e.g.WMS01, CONDUCTOR_PRD_ABC)
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	// Timestamp at time of origin of the message
	Originated           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=originated,proto3" json:"originated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Conversation) Reset()         { *m = Conversation{} }
func (m *Conversation) String() string { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()    {}
func (*Conversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_51baa40a1cc6b48b, []int{0}
}

func (m *Conversation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversation.Unmarshal(m, b)
}
func (m *Conversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversation.Marshal(b, m, deterministic)
}
func (m *Conversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversation.Merge(m, src)
}
func (m *Conversation) XXX_Size() int {
	return xxx_messageInfo_Conversation.Size(m)
}
func (m *Conversation) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversation.DiscardUnknown(m)
}

var xxx_messageInfo_Conversation proto.InternalMessageInfo

func (m *Conversation) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *Conversation) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Conversation) GetOriginated() *timestamp.Timestamp {
	if m != nil {
		return m.Originated
	}
	return nil
}

// HelloMessage is used in hello exchanges to enable client or server side to send an application level hello request
// with the option of requesting a hello in return.
type Hello struct {
	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	// echo_request is set when launching a Hello message for which we expect to see a Hello back carrying out original
	// nonce value.
	EchoRequest bool `protobuf:"varint,2,opt,name=echo_request,json=echoRequest,proto3" json:"echo_request,omitempty"`
	// nonce is a random number which is generated when launching a Hello with echo_request set, and copied from the
	// original Hello when replying with echo_request set to false.
	Nonce                int64    `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hello) Reset()         { *m = Hello{} }
func (m *Hello) String() string { return proto.CompactTextString(m) }
func (*Hello) ProtoMessage()    {}
func (*Hello) Descriptor() ([]byte, []int) {
	return fileDescriptor_51baa40a1cc6b48b, []int{1}
}

func (m *Hello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hello.Unmarshal(m, b)
}
func (m *Hello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hello.Marshal(b, m, deterministic)
}
func (m *Hello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hello.Merge(m, src)
}
func (m *Hello) XXX_Size() int {
	return xxx_messageInfo_Hello.Size(m)
}
func (m *Hello) XXX_DiscardUnknown() {
	xxx_messageInfo_Hello.DiscardUnknown(m)
}

var xxx_messageInfo_Hello proto.InternalMessageInfo

func (m *Hello) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *Hello) GetEchoRequest() bool {
	if m != nil {
		return m.EchoRequest
	}
	return false
}

func (m *Hello) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func init() {
	proto.RegisterType((*Conversation)(nil), "connection.Conversation")
	proto.RegisterType((*Hello)(nil), "connection.Hello")
}

func init() { proto.RegisterFile("connection.proto", fileDescriptor_51baa40a1cc6b48b) }

var fileDescriptor_51baa40a1cc6b48b = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0xda, 0x46, 0x70, 0xc9, 0x80, 0x4e, 0x08, 0x45, 0x5d, 0x28, 0x9d, 0x3a, 0xb9,
	0x52, 0xd9, 0x10, 0x13, 0x2c, 0xcc, 0x16, 0x13, 0x0b, 0x4a, 0xcd, 0x11, 0x2c, 0xb9, 0x77, 0xc5,
	0x76, 0x3b, 0xf2, 0xdb, 0x51, 0x6d, 0x22, 0xcc, 0x76, 0xf7, 0xfc, 0xac, 0xef, 0x3b, 0xb8, 0x34,
	0xc2, 0x4c, 0x26, 0x5a, 0x61, 0xb5, 0xf7, 0x12, 0x05, 0xe1, 0x2f, 0x99, 0xdf, 0x0c, 0x22, 0x83,
	0xa3, 0x75, 0x7a, 0xd9, 0x1e, 0x3e, 0xd6, 0xd1, 0xee, 0x28, 0xc4, 0x7e, 0xb7, 0xcf, 0xe5, 0xe5,
	0x11, 0xda, 0x27, 0xe1, 0x23, 0xf9, 0xd0, 0x9f, 0x3e, 0x20, 0xc2, 0xd4, 0x59, 0xa6, 0xae, 0x5a,
	0x54, 0xab, 0x0b, 0x9d, 0x66, 0xbc, 0x86, 0x5a, 0xbc, 0x1d, 0x2c, 0x77, 0x67, 0x29, 0xfd, 0xdd,
	0xf0, 0x1e, 0x20, 0x4f, 0x7d, 0xa4, 0xf7, 0x6e, 0xb2, 0xa8, 0x56, 0xcd, 0x66, 0xae, 0x32, 0x51,
	0x8d, 0x44, 0xf5, 0x32, 0x12, 0x75, 0xd1, 0x5e, 0x7e, 0xc3, 0xec, 0x99, 0x9c, 0x13, 0x7c, 0x80,
	0xd6, 0x14, 0x02, 0x09, 0xdc, 0x6c, 0x3a, 0x55, 0x9c, 0x55, 0x0a, 0xea, 0x7f, 0x6d, 0xbc, 0x85,
	0x96, 0xcc, 0xa7, 0xbc, 0x79, 0xfa, 0x3a, 0x50, 0x88, 0x49, 0xf0, 0x5c, 0x37, 0xa7, 0x4c, 0xe7,
	0x08, 0xaf, 0x60, 0xc6, 0xc2, 0x86, 0x92, 0xe0, 0x44, 0xe7, 0xe5, 0xb1, 0x7e, 0x9d, 0xf6, 0xc1,
	0x87, 0x6d, 0x9d, 0x3c, 0xef, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x45, 0xfe, 0xe3, 0x17, 0x47,
	0x01, 0x00, 0x00,
}
